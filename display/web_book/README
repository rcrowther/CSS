= Webbook
A version of the Book CSS. The original used supplementary CSS stylesheets to convert to web use. This is designed primarily for the web.  

== Overview
WebBook is an opinionated stylesheet. It includes several theming posibilities, but only within many fixed parameters. WebBook is like, say, Bootstrap, which has a ''Bootstrap look'. It is not like, say, PureCSS---a framework with no opinion about page sizes, font sizes, or spacing.

Webbook is based in typographic conventions. Compared to the usual look of the web, it has very limited page layout, limited typographical manipulation (restricted to some themed items), finar gradations of sizing (sometimes not obvious without a close look), and a lot more space then usual.


== Setup
WebBook should be built using Normalize CSS

== Font basic
Font basics are set using,
++
- --fontsize 
- --lineheight
+
on the body element. 

Default is 12pt. If the font-size is changed, it is expected that the corresponding font size set is uncommented. This currently limits font size changes to 11pt, 12pt, 14pt, 17pt. Default is 12pt.

Font-family is also on the body element, and can be simply overrridden.


=== Responsiveness
The fonts have a small fix to compensate for high resolution screen shrinkage. This is enabled by default. The fix does not attempt to maintain text size, simply keep text readable on hi-res, non-Apple screens. You can comment the feature out, or tamper with it, in the few rules having the property --fontscale.



== Layout
Webbook has a concent of stacked blocks, which make up a page. For a typical page these blocks would be a header (with menu), a typeblock, then a footer. However, there can be as few or many stacked blocks as you wish.

Each block has a concept of ''paper'. This is a visible width, usually centred. Paper is for creating designs on. Papers are smaller in size than wide screens. So there is surplus space round them. In a finished design, this space would be filled with some background ornamentation, or disgused, for example as black or white (in concept, paper is somehat like the typographical concept of ''stock trimmed to size')

Each paper is designed for different purposes.
+dl
~ paper-stock
: This is full width of the screen, whatever that is. Mainly intended for menu and full-width footer displays
~ paper-cols
: Made for a side column. See the subsection
~ paper-web
: For display of full width text. On a most screens (responsiveness will vary) the readwidth is not disimmilar to paper printing
~ paper-a4 
: A4 width strictly. This is too wide for good readability, but may have it's uses 
~ paper-column
: The usual width of a wide columnal text, such as in newspapers. This is a style of presentation that, though seldom used, is nice for the web
+
The paper classes can be applied to any block-level HTML. header/nav/article etc. could all be appropriate.

=== Column layout
One paper, ''paper-cols' allows a side column. It should have two child containers, classed,
++
- .col-2
- .col-5
+
That's all that is currently allowable.

== Margins
Round every content container you will want margins. Note that I say ''content container'. If the paper is a simple one, the margins class can be applied directly to it. But if the paper is ''paper-cols', then the margins should be applied to the column containers, not the paper. A small set is available,
++
- margins-fluid
- margins-narrower
- margins-narrow
- margins-normal
- margins-wide
- margins-wider
+
I do not recommend very wide margins for the web. If you use them, check they do not shrink images and objects too small on small screens.

=== Margins for paper-stock
A few margin classes are for use with paper-stock. What these will do is narrow paper-stock (which is full width, recall) so the typeblock width matches paper-web, paper-cols, or paper-column. 

To do this,  
++
- paper-stock-inner-margins-web, 
- paper-stock-inner-margins-cols
- paper-stock-inner-margins-column 
+ 
Having an invisible typeblock is very common web idion, especially so stock width papers can indicate site headers and footers  (as opposed to article/main headers). But CSS does not allow matching of inner widths to other typeblock using padding (which is how paper works). So these classes must be applied to a paper container/liner block. Fortuneately, having a liner is so common for positioning purposes, that his is no problem in practice,

<header class="paper-stock">
  <nav class="paper-stock-inner-margins-web">





=== Layout Responsiveness
Under web page width, for paper-cols and the cols, the cols will reorganise as full-width vertical blocks.

Under column page width, margins will shrink to a minimal size.



#################################################################
== Changes  from sources

++
- Two columns for page layout
- Advanced responsive features
- A rethink of how to present typography culture for web display
+
Retained are
++
- The advanced web print layouts
- A Book-like header set
- Core Figure and List layouts
+

Currently/forever lost,
++
- Alternative typeblock sizing
- Many alternative chapter headings
- Numeric handling in chapter headings
- Table of Contents and other specialist list features
- many tweak/convenience features, such as direct Font sizing
+

Memoir features missing,
++
- Many alternative chapter headings
- Numeric handling in chapter headings
- List no-paragraph spacing (* command) 

+
== Ajustments from Menoir

Font sizes asumed to bbe correct
Some responiveness to approximate to above
?Fixed page widths
? chapter numbering ignored


== Reference
=== A body
This is the original paper ''stock'. contains...

=== Paperblocks
These are optional, but you must start here. 

''Paper' in the WebBook sense does not embrace the whole webpage. That's why it is called ''paper' and not ''page'. Papers define stacked blocks which will contain other content. The point of the ''paperblock' is to define the horizontal extent of backgrounds. This allows to use, for example, a background which does not occupy full display width, but will add consistent visual margins to typeblocks, colums, figures and other content.

The class of the paperblock will define how wide the block, the apparent ''page'/background width behind it. There is a choice of,
+dl
~ paper-stock
: This class has no rule, blocks will be full width with no margin

~ paper-text
: This centres the block, then uses a rough text-width to define the maximum page width. This is partly to avoid long lines on high-width screens, though that is on current screens unlikely. The class also prevents layouts expanding too far horizontally, so visually separating columns with too much guttering. 

Currently,
body > .paper-text {
    max-width: 74rem;
    margin: 0 auto;
}
 
~ paper-plain
For classical typography the paperwith-text class is a little too wide, This is largely unimportant on the web, because it is unlikely to display under these conditions and is visually compromised. Moreover, you may want room for a side colum, which will narrow a typeblock anyway. But if the aim is pure text display, no side-column,  paperwith-narrow is close to typographical recommendations.

Currently,
body > .paper-plain {
    max-width: 66rem;
    margin: 0 auto;
}

~ paper-column
: Some may have a use for paperwidth that resembles a column, so,
body > .paper-column {
    max-width: 45rem;
    margin: 0 auto;
}

+

The classes can be used on headers and footers, in which case ''page' backgrounds will line up with other pageblocks that use the style.

=== Print Margins
Printblocks establish any margin between paper and content.

+dl
~ print-fluid-margin
: Can only be used inside paper-stock. Allows infinitely horizontal-expanding paper to contain a fixed width block,

[topbar]
.print-fluid-margin {
    max-width: 74rem;
    margin: 0 auto;
}

~ print-fixed-margin
: Can be used inside fixed or expanding paper (more use in expanding). Establishes a margin,

.print-fixed-margin {
    padding: 2rem 4em;
}



~ Fixed margin text alternatives
: These allocate much more spacious layouts, more like printed typography. So more concerned with eye-flow than tidy layout,

.print-fixed-margin-std {
    padding:7rem;
}

.print-fixed-margin-mdvl {
    padding: 6rem 6rem 9rem 6rem;
}

.print-fixed-margin-iso {
    padding: 6rem 6rem 12rem 6rem;
}

=== Layouts
~ layout-horizontal-top
: Layout contents horizontally and top aligned.

[main.stock]

.layout-horizontal-top > * {
    display: inline-block;
    vertical-align: top;
}

~ layout-horizontal-middle
: Layout contents horizontally and middle aligned.

.layout-horizontal-middle > * {
    display: inline-block;
    vertical-align: middle;
}

~ layout-vertical-middle
: Layout contents vertically and middle aligned. Relies on fixed width contents,

.layout-vertical-middle > * {
  margin: auto;
}

+

=== Container margins

~ Fluid margin horizontal
: Can only be used inside paper-stock. Allows infinitely horizontal-expanding paper to contain a fixed width block,

.container-fluid-margin-horizontal {
    max-width: 74rem;
    margin: 0 auto;
}

~ Fixed margin vertical
: Set top/bottom margins only, for a vertical middle-aligned container,

.container-fixed-margin-vertical {
    padding: 8rem 0;
} 


==

.under-paper-width-remove {
	display: none;
}




== Fonts


======

  Optional of header/main/footer, optionally classed "stock"
- main.stock must contain...
- Optional of article, and block-display element classed 'sidecol'
+

i.e. minimal skeleton,
??
    <body>
        <header class="stock">
        </header>

		<main class="stock">
<article>
</article>
        <aside class="sidecol">
		</aside>
		</main>
		
        <footer class="stock">
        </footer>
    </body>
?
