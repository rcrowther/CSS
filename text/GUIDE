= guide

CSS files are provided with test pages to show main features of their display. The test pages are definitive. They also may be provided with README files, to explain the HTML required, the sources and aims of the project, etc.

== TML interaction
Some of the CSS files depend on HTML which can be generated by TML, or other maarkup processors. For TML, typically, compile with,

tml -v -uml -g htmlCB -wp "../css/.../doc.css" SRC DST

README file compiled with,

tml -v -uml -g markdown ".../css/text/README" ".../css/README"

From the top folder,

tml -v -uml -g markdown "text/README"

== Some HTML generalities
As the files have been developed, some gneralities have become apparent.

=== Text should be paragraphed
The CSS will not work without expicit paragraphing.

=== Figures are an inline item
This is intriguing.

In typography, a figure is a ''float' item. They float where the layout allows best placement, often ''top center'.

However, HTML5 defines them as a grouping element. Of necessity, most browsers default render as display ''block', as the concept of a ''page' does not exist on the web.

The HTML5 staandard stresses the ''float' nature of a figure. Yet examples show paragraph breaks before and after the figure.

This is prbably wrong semantically, because most figurtes are an illustration of some text, like an adittional sub-sentence; ""The structure of a tree---nodes joined to nodes". So ""The structure of a tree figure 2 tree".

And splitting paragraphs across figures will produce display errors, starting paragraphs below figures where they should not be.

The current decision is that a ''figure' element is inserted into a paragraph. Inline. This also saves on HTML.


== CSS generalities
=== selection
While CSS selectors have become more sophisticated, some guesses are either difficult or impossible. While classes are avoided, in some situations they must be used, e.g. there are often different classes for figures depending on content.
